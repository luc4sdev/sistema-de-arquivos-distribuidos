syntax = "proto3";

package filesystem;

service FileSystem {
  // Operações básicas de arquivo
  rpc CreateFile (FileRequest) returns (FileOperationResponse);
  rpc ReadFile (FileRequest) returns (FileOperationResponse);
  rpc WriteFile (FileRequest) returns (FileOperationResponse);
  rpc DeleteFile (FileRequest) returns (FileOperationResponse);
  
  // Operações com chunks
  rpc UploadFile (stream FileChunk) returns (FileOperationResponse);
  rpc DownloadFile (DownloadFileRequest) returns (stream FileChunk);
  
  // Listagem e monitoramento
  rpc ListFiles (ListFilesRequest) returns (ListFilesResponse);
  rpc Subscribe (SubscriptionRequest) returns (stream Notification);
}

// Mensagens para operações básicas
message FileRequest {
  string filename = 1;
  string content = 2;
}

// Chunk individual do arquivo
message FileChunk {
  string filename = 1;
  int32 chunk_number = 2;
  int32 total_chunks = 3;
  bytes chunk = 4;
  string checksum = 5;
}

// Pedido de download
message DownloadFileRequest {
  string path = 1;
}

// Listagem de arquivos
message ListFilesRequest {
  string path = 1;
}

message ListFilesResponse {
  string status = 1;
  string message = 2;
  repeated string files = 3;
  int64 time_ms = 4;
}

// Resposta genérica
message FileOperationResponse {
  string status = 1;
  string message = 2;
  int64 time_ms = 3;
}

// Notificações
message SubscriptionRequest {
  string client_id = 1;
}

message Notification {
  string event_type = 1;
  string file_path = 2;
  int64 timestamp = 3;
  string additional_info = 4;
}